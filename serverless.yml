service: appvengers

provider:
  name: aws
  runtime: python3.10
  memorySize: 512  
  timeout: 30 
  tracing: true
  profile: appvengers # Change depending on the environment
  stage: ${opt:stage, 'dev'} # Use --stage flag in deploy -- production / test / dev
  region: us-west-2
  architecture: arm64
  apiGateway:
    apiKeys:
      - appVengersAPI
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
        - s3:*
        - lambda:*
        - sagemaker:*
        - sns:*
        - states:*
      Resource: "*"

plugins:
  - serverless-offline
  - serverless-step-functions

package:
  individually: true

custom:
  pythonRequirements:
    dockerizePip: true

functions:
  predict:
    handler: handlers/predict.main
    events:
      - http:
          path: predict
          method: post
          private: true

  updateData:
    handler: handlers/updateData.updateData
    events:
      - schedule: rate(7 days)

  createEndpointModel:
    handler: handlers/createEndpointModel.createEndpointModel
    events:
      - s3:
          bucket:
            Ref: createEndpointModelBucket
          event: s3:ObjectCreated:Put
          rules:
            - prefix: appvengers/
          existing: true

  Tradicional:
    handler: handlers/Tradicional.handler
    timeout: 30
    memorySize: 256  

  NetworkingAccelerator:
    handler: handlers/NetworkingAccelerator.handler
    timeout: 30
    memorySize: 256  

  saveResult:
    handler: handlers/saveResult.handler
    timeout: 30
    memorySize: 256  
  
  AppVengersAccelerator:
    handler: handlers/AppVengersAccelerator.handler
    timeout: 30
    memorySize: 256 
  
  trainingModel:
    handler: handlers/trainingModel.handler
    timeout: 30
    memorySize: 256 
  
  updateModel:
    handler: handlers/updateModel.handler
    timeout: 30
    memorySize: 256 

stepFunctions:
  stateMachines:
    analisisCredito:
      name: "analisisCredito"
      definition:
        Comment: "Análisis de Crédito del Banco Guayaquil / Grupo Appvengers"
        StartAt: "Start Model"
        States:
          Start Model:
            Type: "Parallel"
            Branches:
              - StartAt: "Tradicional"
                States:
                  Tradicional:
                    Type: "Task"
                    Resource: "arn:aws:lambda:us-west-2:575809686199:function:appvengers-dev-Tradicional"
                    End: true
              - StartAt: "NetworkingAccelerator"
                States:
                  NetworkingAccelerator:
                    Type: "Task"
                    Resource: "arn:aws:lambda:us-west-2:575809686199:function:appvengers-dev-NetworkingAccelerator"
                    End: true
              - StartAt: "AppVengersAccelerator"
                States:
                  AppVengersAccelerator:
                    Type: "Task"
                    Resource: "arn:aws:lambda:us-west-2:575809686199:function:appvengers-dev-AppVengersAccelerator"
                    End: true
            Next: "SaveResult"

          SaveResult:
            Type: "Task"
            Resource: "arn:aws:lambda:us-west-2:575809686199:function:appvengers-dev-saveResult"
            End: true

    ReentrenamientoModelo:
      name: "ReentrenamientoModelo"
      definition:
        Comment: "Reentrenamiento del Modelo del Banco Guayaquil / Grupo Appvengers"
        StartAt: "updateData"
        States:
          updateData:
            Type: "Task"
            Resource: "arn:aws:lambda:us-west-2:575809686199:function:appvengers-dev-updateData"
            Next: "trainingModel"

          trainingModel:
            Type: "Task"
            Resource: "arn:aws:lambda:us-west-2:575809686199:function:appvengers-dev-trainingModel"
            Next: "updateModel"

          updateModel:
            Type: "Task"
            Resource: "arn:aws:lambda:us-west-2:575809686199:function:appvengers-dev-updateModel"
            End: true

resources:
  Resources:
    PrediccionesCredito:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.stage}-${self:service}-PrediccionesCredito
        AttributeDefinitions:
          - AttributeName: clientId
            AttributeType: S
        KeySchema:
          - AttributeName: clientId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    ReentrenamientoNotificaciones:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:provider.stage}-${self:service}-ReentrenamientoNotificaciones

    createEndpointModelBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.stage}-${self:service}-createendpointmodel
        CorsConfiguration:
          CorsRules:
            - AllowedOrigins:
                - '*'
              AllowedHeaders:
                - '*'
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD